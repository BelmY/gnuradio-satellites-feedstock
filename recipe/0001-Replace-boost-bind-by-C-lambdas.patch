From 976cf67446f611febc623d029162b4c7284dbc76 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Daniel=20Est=C3=A9vez?= <daniel@destevez.net>
Date: Fri, 16 Oct 2020 19:18:07 +0200
Subject: [PATCH] Replace boost::bind() by C++ lambdas

This will probably help with the problems with boost >= 1.73
reported in #181.

gnuradio is still using boost::bind in maint-3.8 but has switched
to lambdas in master, so I have just copied what they are doing
there and it seems to work fine.
---
 CHANGELOG.md                          | 5 +++++
 lib/ao40_rs_decoder_impl.cc           | 3 +--
 lib/ax100_decode_impl.cc              | 3 +--
 lib/decode_ra_code_impl.cc            | 3 +--
 lib/decode_rs_general_impl.cc         | 3 +--
 lib/decode_rs_impl.cc                 | 2 +-
 lib/decode_rs_interleaved_impl.cc     | 3 +--
 lib/encode_rs_impl.cc                 | 2 +-
 lib/matrix_deinterleaver_soft_impl.cc | 3 +--
 lib/nusat_decoder_impl.cc             | 3 +--
 lib/u482c_decode_impl.cc              | 3 +--
 11 files changed, 15 insertions(+), 18 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 8561b5a..12bc69c 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -4,6 +4,11 @@ All notable changes to this project will be documented in this file.
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## Unreleased
+
+### Changed
+- Replaced boost::bind() by C++ lambdas
+
 ## [3.5.0] - 2020-10-08
 
 ### Added
diff --git a/lib/ao40_rs_decoder_impl.cc b/lib/ao40_rs_decoder_impl.cc
index c86c47e..ed83abb 100644
--- a/lib/ao40_rs_decoder_impl.cc
+++ b/lib/ao40_rs_decoder_impl.cc
@@ -43,8 +43,7 @@ ao40_rs_decoder_impl::ao40_rs_decoder_impl(bool verbose)
 {
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&ao40_rs_decoder_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/ax100_decode_impl.cc b/lib/ax100_decode_impl.cc
index ae85b57..feb6d7f 100644
--- a/lib/ax100_decode_impl.cc
+++ b/lib/ax100_decode_impl.cc
@@ -44,8 +44,7 @@ ax100_decode_impl::ax100_decode_impl(bool verbose)
 {
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&ax100_decode_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/decode_ra_code_impl.cc b/lib/decode_ra_code_impl.cc
index 37da083..92c5da4 100644
--- a/lib/decode_ra_code_impl.cc
+++ b/lib/decode_ra_code_impl.cc
@@ -45,8 +45,7 @@ decode_ra_code_impl::decode_ra_code_impl(int size)
 
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&decode_ra_code_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/decode_rs_general_impl.cc b/lib/decode_rs_general_impl.cc
index 25ee032..12f1d27 100644
--- a/lib/decode_rs_general_impl.cc
+++ b/lib/decode_rs_general_impl.cc
@@ -53,8 +53,7 @@ decode_rs_general_impl::decode_rs_general_impl(
 
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&decode_rs_general_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/decode_rs_impl.cc b/lib/decode_rs_impl.cc
index 41a12df..3658df1 100644
--- a/lib/decode_rs_impl.cc
+++ b/lib/decode_rs_impl.cc
@@ -42,7 +42,7 @@ decode_rs_impl::decode_rs_impl(bool verbose, int basis)
 {
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&decode_rs_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/decode_rs_interleaved_impl.cc b/lib/decode_rs_interleaved_impl.cc
index d45b3e4..0967f69 100644
--- a/lib/decode_rs_interleaved_impl.cc
+++ b/lib/decode_rs_interleaved_impl.cc
@@ -49,8 +49,7 @@ decode_rs_interleaved_impl::decode_rs_interleaved_impl(bool verbose,
 
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&decode_rs_interleaved_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/encode_rs_impl.cc b/lib/encode_rs_impl.cc
index 7421add..6bce06c 100644
--- a/lib/encode_rs_impl.cc
+++ b/lib/encode_rs_impl.cc
@@ -41,7 +41,7 @@ encode_rs_impl::encode_rs_impl(int basis)
 {
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&encode_rs_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/matrix_deinterleaver_soft_impl.cc b/lib/matrix_deinterleaver_soft_impl.cc
index 418875f..1be786b 100644
--- a/lib/matrix_deinterleaver_soft_impl.cc
+++ b/lib/matrix_deinterleaver_soft_impl.cc
@@ -50,8 +50,7 @@ matrix_deinterleaver_soft_impl::matrix_deinterleaver_soft_impl(int rows,
 
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&matrix_deinterleaver_soft_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/nusat_decoder_impl.cc b/lib/nusat_decoder_impl.cc
index 6f9e446..af65d2b 100644
--- a/lib/nusat_decoder_impl.cc
+++ b/lib/nusat_decoder_impl.cc
@@ -75,8 +75,7 @@ nusat_decoder_impl::nusat_decoder_impl()
 
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&nusat_decoder_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
diff --git a/lib/u482c_decode_impl.cc b/lib/u482c_decode_impl.cc
index c7e5aaf..4dc5148 100644
--- a/lib/u482c_decode_impl.cc
+++ b/lib/u482c_decode_impl.cc
@@ -69,8 +69,7 @@ u482c_decode_impl::u482c_decode_impl(bool verbose, int viterbi, int scrambler, i
 
     message_port_register_out(pmt::mp("out"));
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&u482c_decode_impl::msg_handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->msg_handler(msg); });
 }
 
 /*
-- 
2.20.1

